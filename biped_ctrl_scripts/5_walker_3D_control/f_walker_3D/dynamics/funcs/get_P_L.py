import numpy as np
from sympy import *
# AUTO-GENERATE @ 2024-10-22 14:58:56

def get_P_L(x, y, z, roll, pitch, yaw, roll_lh, pitch_lh, yaw_lh, pitch_lk, roll_rh, pitch_rh, yaw_rh, pitch_rk, w, l0, l1, l2, F):

    P_L = np.array([F*(-l1*(-((-(-sin(yaw)*cos(pitch)*cos(yaw_lh) - sin(yaw_lh)*cos(pitch)*cos(yaw))*sin(roll_lh) + sin(pitch)*cos(roll_lh))*sin(pitch_lh) + (-sin(yaw)*sin(yaw_lh)*cos(pitch) + cos(pitch)*cos(yaw)*cos(yaw_lh))*cos(pitch_lh))*sin(pitch_lk) + ((-(-sin(yaw)*cos(pitch)*cos(yaw_lh) - sin(yaw_lh)*cos(pitch)*cos(yaw))*sin(roll_lh) + sin(pitch)*cos(roll_lh))*cos(pitch_lh) - (-sin(yaw)*sin(yaw_lh)*cos(pitch) + cos(pitch)*cos(yaw)*cos(yaw_lh))*sin(pitch_lh))*cos(pitch_lk)) - (-l1 - l2)*(-((-(-sin(yaw)*cos(pitch)*cos(yaw_lh) - sin(yaw_lh)*cos(pitch)*cos(yaw))*sin(roll_lh) + sin(pitch)*cos(roll_lh))*sin(pitch_lh) + (-sin(yaw)*sin(yaw_lh)*cos(pitch) + cos(pitch)*cos(yaw)*cos(yaw_lh))*cos(pitch_lh))*sin(pitch_lk) + ((-(-sin(yaw)*cos(pitch)*cos(yaw_lh) - sin(yaw_lh)*cos(pitch)*cos(yaw))*sin(roll_lh) + sin(pitch)*cos(roll_lh))*cos(pitch_lh) - (-sin(yaw)*sin(yaw_lh)*cos(pitch) + cos(pitch)*cos(yaw)*cos(yaw_lh))*sin(pitch_lh))*cos(pitch_lk)))/l2, F*(-l1*(-((-((-sin(pitch)*sin(roll)*sin(yaw) + cos(roll)*cos(yaw))*cos(yaw_lh) - (sin(pitch)*sin(roll)*cos(yaw) + sin(yaw)*cos(roll))*sin(yaw_lh))*sin(roll_lh) - sin(roll)*cos(pitch)*cos(roll_lh))*sin(pitch_lh) + ((-sin(pitch)*sin(roll)*sin(yaw) + cos(roll)*cos(yaw))*sin(yaw_lh) + (sin(pitch)*sin(roll)*cos(yaw) + sin(yaw)*cos(roll))*cos(yaw_lh))*cos(pitch_lh))*sin(pitch_lk) + ((-((-sin(pitch)*sin(roll)*sin(yaw) + cos(roll)*cos(yaw))*cos(yaw_lh) - (sin(pitch)*sin(roll)*cos(yaw) + sin(yaw)*cos(roll))*sin(yaw_lh))*sin(roll_lh) - sin(roll)*cos(pitch)*cos(roll_lh))*cos(pitch_lh) - ((-sin(pitch)*sin(roll)*sin(yaw) + cos(roll)*cos(yaw))*sin(yaw_lh) + (sin(pitch)*sin(roll)*cos(yaw) + sin(yaw)*cos(roll))*cos(yaw_lh))*sin(pitch_lh))*cos(pitch_lk)) - (-l1 - l2)*(-((-((-sin(pitch)*sin(roll)*sin(yaw) + cos(roll)*cos(yaw))*cos(yaw_lh) - (sin(pitch)*sin(roll)*cos(yaw) + sin(yaw)*cos(roll))*sin(yaw_lh))*sin(roll_lh) - sin(roll)*cos(pitch)*cos(roll_lh))*sin(pitch_lh) + ((-sin(pitch)*sin(roll)*sin(yaw) + cos(roll)*cos(yaw))*sin(yaw_lh) + (sin(pitch)*sin(roll)*cos(yaw) + sin(yaw)*cos(roll))*cos(yaw_lh))*cos(pitch_lh))*sin(pitch_lk) + ((-((-sin(pitch)*sin(roll)*sin(yaw) + cos(roll)*cos(yaw))*cos(yaw_lh) - (sin(pitch)*sin(roll)*cos(yaw) + sin(yaw)*cos(roll))*sin(yaw_lh))*sin(roll_lh) - sin(roll)*cos(pitch)*cos(roll_lh))*cos(pitch_lh) - ((-sin(pitch)*sin(roll)*sin(yaw) + cos(roll)*cos(yaw))*sin(yaw_lh) + (sin(pitch)*sin(roll)*cos(yaw) + sin(yaw)*cos(roll))*cos(yaw_lh))*sin(pitch_lh))*cos(pitch_lk)))/l2, F*(-l1*(-((-((sin(pitch)*sin(yaw)*cos(roll) + sin(roll)*cos(yaw))*cos(yaw_lh) - (-sin(pitch)*cos(roll)*cos(yaw) + sin(roll)*sin(yaw))*sin(yaw_lh))*sin(roll_lh) + cos(pitch)*cos(roll)*cos(roll_lh))*sin(pitch_lh) + ((sin(pitch)*sin(yaw)*cos(roll) + sin(roll)*cos(yaw))*sin(yaw_lh) + (-sin(pitch)*cos(roll)*cos(yaw) + sin(roll)*sin(yaw))*cos(yaw_lh))*cos(pitch_lh))*sin(pitch_lk) + ((-((sin(pitch)*sin(yaw)*cos(roll) + sin(roll)*cos(yaw))*cos(yaw_lh) - (-sin(pitch)*cos(roll)*cos(yaw) + sin(roll)*sin(yaw))*sin(yaw_lh))*sin(roll_lh) + cos(pitch)*cos(roll)*cos(roll_lh))*cos(pitch_lh) - ((sin(pitch)*sin(yaw)*cos(roll) + sin(roll)*cos(yaw))*sin(yaw_lh) + (-sin(pitch)*cos(roll)*cos(yaw) + sin(roll)*sin(yaw))*cos(yaw_lh))*sin(pitch_lh))*cos(pitch_lk)) - (-l1 - l2)*(-((-((sin(pitch)*sin(yaw)*cos(roll) + sin(roll)*cos(yaw))*cos(yaw_lh) - (-sin(pitch)*cos(roll)*cos(yaw) + sin(roll)*sin(yaw))*sin(yaw_lh))*sin(roll_lh) + cos(pitch)*cos(roll)*cos(roll_lh))*sin(pitch_lh) + ((sin(pitch)*sin(yaw)*cos(roll) + sin(roll)*cos(yaw))*sin(yaw_lh) + (-sin(pitch)*cos(roll)*cos(yaw) + sin(roll)*sin(yaw))*cos(yaw_lh))*cos(pitch_lh))*sin(pitch_lk) + ((-((sin(pitch)*sin(yaw)*cos(roll) + sin(roll)*cos(yaw))*cos(yaw_lh) - (-sin(pitch)*cos(roll)*cos(yaw) + sin(roll)*sin(yaw))*sin(yaw_lh))*sin(roll_lh) + cos(pitch)*cos(roll)*cos(roll_lh))*cos(pitch_lh) - ((sin(pitch)*sin(yaw)*cos(roll) + sin(roll)*cos(yaw))*sin(yaw_lh) + (-sin(pitch)*cos(roll)*cos(yaw) + sin(roll)*sin(yaw))*cos(yaw_lh))*sin(pitch_lh))*cos(pitch_lk)))/l2])  

    return P_L