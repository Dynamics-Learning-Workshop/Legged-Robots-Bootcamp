{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
\cocoascreenfonts1{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10780\viewh11080\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 \
\'97 link1_traj and link2_traj are used to find the position, velocity for each of the two links\
\
How to run:\
\
1. Simulate the case when we have perfect model and no feedback control\
\
 Set parms.m1_hat = parms.m1 and parms.m2_hat = parms.m2\
    parms.control.Kp1 = 0 and parms.control.Kp2 = 0;\
\
Now run twolink_main. Note that the RMSE for position and velocity is close to zero.\
\
2. Now set a model mismatch but keep the feedback controller off.\
	Set parms.m1_hat = parms.m1+0.5 and parms.m2_hat = parms.m2+0.5\
	\
Now run the twolink_main. Note that the tracking is relatively poor. You can see this from plots, animation and RMSE \
\
3. Now set a feedback controller.\
	parms.control.Kp1 = 100; \
	parms.control.Kp2 = 100;\
\
Now run the twolink_main. Note that the RMSE is relatively lower than case 2 but not any better than case 1. \
\
One of the big challenges is to tune the feedback controller such that adequate performance is guaranteed while keeping the feedback gains low. One method of gauging performance could be the RMSE should be below a certain value. \
\
	}