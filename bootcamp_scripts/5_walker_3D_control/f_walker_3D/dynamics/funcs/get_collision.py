import numpy as np
from sympy import *
# AUTO-GENERATE @ 2024-10-18 18:31:44

def get_collision(x, y, z, roll, pitch, yaw, roll_lh, pitch_lh, yaw_lh, roll_rh, pitch_rh, yaw_rh, pitch_lk, pitch_rk, w, l0, l1, l2):

    get_p_Hip_R_init = np.array([-l1*(1 - cos(pitch_lk))*((-((sin(pitch)*sin(yaw)*cos(roll) + sin(roll)*cos(yaw))*cos(yaw_lh) - (-sin(pitch)*cos(roll)*cos(yaw) + sin(roll)*sin(yaw))*sin(yaw_lh))*sin(roll_lh) + cos(pitch)*cos(roll)*cos(roll_lh))*cos(pitch_lh) - ((sin(pitch)*sin(yaw)*cos(roll) + sin(roll)*cos(yaw))*sin(yaw_lh) + (-sin(pitch)*cos(roll)*cos(yaw) + sin(roll)*sin(yaw))*cos(yaw_lh))*sin(pitch_lh)) + l1*(1 - cos(pitch_rk))*((((sin(pitch)*sin(yaw)*cos(roll) + sin(roll)*cos(yaw))*cos(yaw_rh) + (-sin(pitch)*cos(roll)*cos(yaw) + sin(roll)*sin(yaw))*sin(yaw_rh))*sin(roll_rh) + cos(pitch)*cos(roll)*cos(roll_rh))*cos(pitch_rh) - (-(sin(pitch)*sin(yaw)*cos(roll) + sin(roll)*cos(yaw))*sin(yaw_rh) + (-sin(pitch)*cos(roll)*cos(yaw) + sin(roll)*sin(yaw))*cos(yaw_rh))*sin(pitch_rh)) - l1*(-((-((sin(pitch)*sin(yaw)*cos(roll) + sin(roll)*cos(yaw))*cos(yaw_lh) - (-sin(pitch)*cos(roll)*cos(yaw) + sin(roll)*sin(yaw))*sin(yaw_lh))*sin(roll_lh) + cos(pitch)*cos(roll)*cos(roll_lh))*sin(pitch_lh) + ((sin(pitch)*sin(yaw)*cos(roll) + sin(roll)*cos(yaw))*sin(yaw_lh) + (-sin(pitch)*cos(roll)*cos(yaw) + sin(roll)*sin(yaw))*cos(yaw_lh))*cos(pitch_lh))*sin(pitch_lk) + ((-((sin(pitch)*sin(yaw)*cos(roll) + sin(roll)*cos(yaw))*cos(yaw_lh) - (-sin(pitch)*cos(roll)*cos(yaw) + sin(roll)*sin(yaw))*sin(yaw_lh))*sin(roll_lh) + cos(pitch)*cos(roll)*cos(roll_lh))*cos(pitch_lh) - ((sin(pitch)*sin(yaw)*cos(roll) + sin(roll)*cos(yaw))*sin(yaw_lh) + (-sin(pitch)*cos(roll)*cos(yaw) + sin(roll)*sin(yaw))*cos(yaw_lh))*sin(pitch_lh))*cos(pitch_lk)) + l1*(-((((sin(pitch)*sin(yaw)*cos(roll) + sin(roll)*cos(yaw))*cos(yaw_rh) + (-sin(pitch)*cos(roll)*cos(yaw) + sin(roll)*sin(yaw))*sin(yaw_rh))*sin(roll_rh) + cos(pitch)*cos(roll)*cos(roll_rh))*sin(pitch_rh) + (-(sin(pitch)*sin(yaw)*cos(roll) + sin(roll)*cos(yaw))*sin(yaw_rh) + (-sin(pitch)*cos(roll)*cos(yaw) + sin(roll)*sin(yaw))*cos(yaw_rh))*cos(pitch_rh))*sin(pitch_rk) + ((((sin(pitch)*sin(yaw)*cos(roll) + sin(roll)*cos(yaw))*cos(yaw_rh) + (-sin(pitch)*cos(roll)*cos(yaw) + sin(roll)*sin(yaw))*sin(yaw_rh))*sin(roll_rh) + cos(pitch)*cos(roll)*cos(roll_rh))*cos(pitch_rh) - (-(sin(pitch)*sin(yaw)*cos(roll) + sin(roll)*cos(yaw))*sin(yaw_rh) + (-sin(pitch)*cos(roll)*cos(yaw) + sin(roll)*sin(yaw))*cos(yaw_rh))*sin(pitch_rh))*cos(pitch_rk)) - l1*((-((sin(pitch)*sin(yaw)*cos(roll) + sin(roll)*cos(yaw))*cos(yaw_lh) - (-sin(pitch)*cos(roll)*cos(yaw) + sin(roll)*sin(yaw))*sin(yaw_lh))*sin(roll_lh) + cos(pitch)*cos(roll)*cos(roll_lh))*sin(pitch_lh) + ((sin(pitch)*sin(yaw)*cos(roll) + sin(roll)*cos(yaw))*sin(yaw_lh) + (-sin(pitch)*cos(roll)*cos(yaw) + sin(roll)*sin(yaw))*cos(yaw_lh))*cos(pitch_lh))*sin(pitch_lk) + l1*((((sin(pitch)*sin(yaw)*cos(roll) + sin(roll)*cos(yaw))*cos(yaw_rh) + (-sin(pitch)*cos(roll)*cos(yaw) + sin(roll)*sin(yaw))*sin(yaw_rh))*sin(roll_rh) + cos(pitch)*cos(roll)*cos(roll_rh))*sin(pitch_rh) + (-(sin(pitch)*sin(yaw)*cos(roll) + sin(roll)*cos(yaw))*sin(yaw_rh) + (-sin(pitch)*cos(roll)*cos(yaw) + sin(roll)*sin(yaw))*cos(yaw_rh))*cos(pitch_rh))*sin(pitch_rk) + w*(1 - cos(roll_lh))*((sin(pitch)*sin(yaw)*cos(roll) + sin(roll)*cos(yaw))*cos(yaw_lh) - (-sin(pitch)*cos(roll)*cos(yaw) + sin(roll)*sin(yaw))*sin(yaw_lh)) + w*(1 - cos(roll_rh))*((sin(pitch)*sin(yaw)*cos(roll) + sin(roll)*cos(yaw))*cos(yaw_rh) + (-sin(pitch)*cos(roll)*cos(yaw) + sin(roll)*sin(yaw))*sin(yaw_rh)) + w*(1 - cos(yaw_lh))*(sin(pitch)*sin(yaw)*cos(roll) + sin(roll)*cos(yaw)) + w*(1 - cos(yaw_rh))*(sin(pitch)*sin(yaw)*cos(roll) + sin(roll)*cos(yaw)) + w*(((sin(pitch)*sin(yaw)*cos(roll) + sin(roll)*cos(yaw))*cos(yaw_lh) - (-sin(pitch)*cos(roll)*cos(yaw) + sin(roll)*sin(yaw))*sin(yaw_lh))*cos(roll_lh) + sin(roll_lh)*cos(pitch)*cos(roll)) - w*(((sin(pitch)*sin(yaw)*cos(roll) + sin(roll)*cos(yaw))*cos(yaw_rh) + (-sin(pitch)*cos(roll)*cos(yaw) + sin(roll)*sin(yaw))*sin(yaw_rh))*cos(roll_rh) - sin(roll_rh)*cos(pitch)*cos(roll)) + w*(-sin(pitch)*cos(roll)*cos(yaw) + sin(roll)*sin(yaw))*sin(yaw_lh) - w*(-sin(pitch)*cos(roll)*cos(yaw) + sin(roll)*sin(yaw))*sin(yaw_rh) - w*sin(roll_lh)*cos(pitch)*cos(roll) + w*sin(roll_rh)*cos(pitch)*cos(roll)])  

    return get_p_Hip_R_init